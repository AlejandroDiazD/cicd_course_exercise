/*
Desarrollar un Pipeline Declarativo en Jenkins que informe a traves de distintos Stages
lo siguiente:
- El pipeline debe tener un mensaje de bienvenida mostrando la fecha actual en formato YYYY-MM-dd
- Información relevante sobre tu ciudad actual:
  ~ Clima actual
  ~ Población actual
- En base a la población actual se debe calcular la población neta e informarla:
  población neta = poblacion actual * 0.8
Se debe declarar las variables de manera global. 
Una vez generado todo esto, se debe generar un fichero de salida con la información.
*/

pipeline {
    agent any

    environment {
        FILE_PATH = "C:\\Users\\adiazd\\OneDrive - Indra\\Cursos\\2024_IntegracionContinua"
        FILE_NAME = "model_exam_4_output"
        CITY = 'Madrid'      
        WEATHER = 'Sunny'            
        POPULATION = 3200000          
    }

    stages {
        stage('Welcome Message') {
            steps {
                script {
                    // Obtener la fecha actual en formato YYYY-MM-dd
                    def currentDate = new Date().format('yyyy-MM-dd', TimeZone.getTimeZone('UTC'))
                    echo "Welcome! Today's date is: ${currentDate}"

                    // Inicializar el contenido para el archivo de salida
                    def outputContent = "Welcome! Today's date is: ${currentDate}\n"
                    writeFile file: "${FILE_PATH}\\${FILE_NAME}.txt", text: outputContent
                }
            }
        }

        stage('City Information') {
            steps {
                script {
                    // Imprimir información sobre la ciudad
                    echo "City: ${env.CITY}"
                    echo "Weather: ${env.WEATHER}"
                    echo "Population: ${env.POPULATION}"

                    // Agregar información al archivo de salida
                    def outputContent = readFile "${FILE_PATH}\\${FILE_NAME}.txt"
                    outputContent += "City: ${env.CITY}\n"
                    outputContent += "Weather: ${env.WEATHER}\n"
                    outputContent += "Population: ${env.POPULATION}\n"
                    writeFile file: "${FILE_PATH}\\${FILE_NAME}.txt", text: outputContent
                }
            }
        }

        stage('Population Calculation') {
            steps {
                script {
                    // Calcular la población neta
                    def netPopulation = env.POPULATION.toInteger() * 0.8
                    echo "Net Population: ${netPopulation}"

                    // Agregar cálculo al archivo de salida
                    def outputContent = readFile "${FILE_PATH}\\${FILE_NAME}.txt"
                    outputContent += "Net Population (80% of total): ${netPopulation}\n"
                    writeFile file: "${FILE_PATH}\\${FILE_NAME}.txt", text: outputContent
                }
            }
        }
    }

    post {
        always {
            script {
                echo "Pipeline completed. Check output.txt for full information."
            }
        }
    }
}
